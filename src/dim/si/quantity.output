Grammar

    0 $accept: output $end

    1 output: unit_group
    2       | unit_group BAD_INPUT
    3       | BAD_INPUT unit_group
    4       | BAD_INPUT
    5       | error

    6 unit_group: '(' unit_group ')'
    7           | unit_group '^' exponent_group
    8           | unit_group '/' unit_group
    9           | unit_group MULTIPLY unit_group
   10           | unit

   11 unit: prefix unit_literal
   12     | unit_literal

   13 prefix: 'y'
   14       | 'z'
   15       | 'a'
   16       | 'f'
   17       | 'p'
   18       | 'n'
   19       | 'u'
   20       | 'm'
   21       | 'c'
   22       | 'd'
   23       | 'Y'
   24       | 'Z'
   25       | 'E'
   26       | 'P'
   27       | 'T'
   28       | 'G'
   29       | 'M'
   30       | 'k'
   31       | 'h'

   32 unit_literal: 'm'
   33             | 's'
   34             | 'g'
   35             | 'r' 'a' 'd'
   36             | 'K'
   37             | 'm' 'o' 'l'
   38             | 'A'
   39             | 'c' 'd'
   40             | 'H' 'z'
   41             | 's' 'r'
   42             | 'N'
   43             | 'P' 'a'
   44             | 'J'
   45             | 'W'
   46             | 'C'
   47             | 'V'
   48             | 'F'
   49             | 'R'
   50             | 'S'
   51             | 'W' 'b'
   52             | 'T'
   53             | 'H'
   54             | 'I' 'm'
   55             | 'I' 'x'
   56             | 'B' 'q'
   57             | 'G' 'y'
   58             | 'S' 'v'
   59             | 'k' 'a' 't'
   60             | 'L'
   61             | 'b' 'a' 'r'
   62             | 'e' 'V'

   63 exponent_group: '(' exponent_group ')'
   64               | INTEGER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 6 63
    ')' (41) 6 63
    '/' (47) 8
    'A' (65) 38
    'B' (66) 56
    'C' (67) 46
    'E' (69) 25
    'F' (70) 48
    'G' (71) 28 57
    'H' (72) 40 53
    'I' (73) 54 55
    'J' (74) 44
    'K' (75) 36
    'L' (76) 60
    'M' (77) 29
    'N' (78) 42
    'P' (80) 26 43
    'R' (82) 49
    'S' (83) 50 58
    'T' (84) 27 52
    'V' (86) 47 62
    'W' (87) 45 51
    'Y' (89) 23
    'Z' (90) 24
    '^' (94) 7
    'a' (97) 15 35 43 59 61
    'b' (98) 51 61
    'c' (99) 21 39
    'd' (100) 22 35 39
    'e' (101) 62
    'f' (102) 16
    'g' (103) 34
    'h' (104) 31
    'k' (107) 30 59
    'l' (108) 37
    'm' (109) 20 32 37 54
    'n' (110) 18
    'o' (111) 37
    'p' (112) 17
    'q' (113) 56
    'r' (114) 35 41 61
    's' (115) 33 41
    't' (116) 59
    'u' (117) 19
    'v' (118) 58
    'x' (120) 55
    'y' (121) 13 57
    'z' (122) 14 40
    error (256) 5
    MULTIPLY (258) 9
    INTEGER <integer> (259) 64
    BAD_INPUT (260) 2 3 4


Nonterminals, with rules where they appear

    $accept (54)
        on left: 0
    output (55)
        on left: 1 2 3 4 5
        on right: 0
    unit_group <quantity> (56)
        on left: 6 7 8 9 10
        on right: 1 2 3 6 7 8 9
    unit <quantity> (57)
        on left: 11 12
        on right: 10
    prefix <scale> (58)
        on left: 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
        on right: 11
    unit_literal <quantity> (59)
        on left: 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62
        on right: 11 12
    exponent_group <integer> (60)
        on left: 63 64
        on right: 7 63


State 0

    0 $accept: • output $end
    1 output: • unit_group
    2       | • unit_group BAD_INPUT
    3       | • BAD_INPUT unit_group
    4       | • BAD_INPUT
    5       | • error
    6 unit_group: • '(' unit_group ')'
    7           | • unit_group '^' exponent_group
    8           | • unit_group '/' unit_group
    9           | • unit_group MULTIPLY unit_group
   10           | • unit
   11 unit: • prefix unit_literal
   12     | • unit_literal
   13 prefix: • 'y'
   14       | • 'z'
   15       | • 'a'
   16       | • 'f'
   17       | • 'p'
   18       | • 'n'
   19       | • 'u'
   20       | • 'm'
   21       | • 'c'
   22       | • 'd'
   23       | • 'Y'
   24       | • 'Z'
   25       | • 'E'
   26       | • 'P'
   27       | • 'T'
   28       | • 'G'
   29       | • 'M'
   30       | • 'k'
   31       | • 'h'
   32 unit_literal: • 'm'
   33             | • 's'
   34             | • 'g'
   35             | • 'r' 'a' 'd'
   36             | • 'K'
   37             | • 'm' 'o' 'l'
   38             | • 'A'
   39             | • 'c' 'd'
   40             | • 'H' 'z'
   41             | • 's' 'r'
   42             | • 'N'
   43             | • 'P' 'a'
   44             | • 'J'
   45             | • 'W'
   46             | • 'C'
   47             | • 'V'
   48             | • 'F'
   49             | • 'R'
   50             | • 'S'
   51             | • 'W' 'b'
   52             | • 'T'
   53             | • 'H'
   54             | • 'I' 'm'
   55             | • 'I' 'x'
   56             | • 'B' 'q'
   57             | • 'G' 'y'
   58             | • 'S' 'v'
   59             | • 'k' 'a' 't'
   60             | • 'L'
   61             | • 'b' 'a' 'r'
   62             | • 'e' 'V'

    error      shift, and go to state 1
    BAD_INPUT  shift, and go to state 2
    '('        shift, and go to state 3
    'y'        shift, and go to state 4
    'z'        shift, and go to state 5
    'a'        shift, and go to state 6
    'f'        shift, and go to state 7
    'p'        shift, and go to state 8
    'n'        shift, and go to state 9
    'u'        shift, and go to state 10
    'm'        shift, and go to state 11
    'c'        shift, and go to state 12
    'd'        shift, and go to state 13
    'Y'        shift, and go to state 14
    'Z'        shift, and go to state 15
    'E'        shift, and go to state 16
    'P'        shift, and go to state 17
    'T'        shift, and go to state 18
    'G'        shift, and go to state 19
    'M'        shift, and go to state 20
    'k'        shift, and go to state 21
    'h'        shift, and go to state 22
    's'        shift, and go to state 23
    'g'        shift, and go to state 24
    'r'        shift, and go to state 25
    'K'        shift, and go to state 26
    'A'        shift, and go to state 27
    'H'        shift, and go to state 28
    'N'        shift, and go to state 29
    'J'        shift, and go to state 30
    'W'        shift, and go to state 31
    'C'        shift, and go to state 32
    'V'        shift, and go to state 33
    'F'        shift, and go to state 34
    'R'        shift, and go to state 35
    'S'        shift, and go to state 36
    'b'        shift, and go to state 37
    'I'        shift, and go to state 38
    'B'        shift, and go to state 39
    'L'        shift, and go to state 40
    'e'        shift, and go to state 41

    output        go to state 42
    unit_group    go to state 43
    unit          go to state 44
    prefix        go to state 45
    unit_literal  go to state 46


State 1

    5 output: error •

    $default  reduce using rule 5 (output)


State 2

    3 output: BAD_INPUT • unit_group
    4       | BAD_INPUT •  [$end]
    6 unit_group: • '(' unit_group ')'
    7           | • unit_group '^' exponent_group
    8           | • unit_group '/' unit_group
    9           | • unit_group MULTIPLY unit_group
   10           | • unit
   11 unit: • prefix unit_literal
   12     | • unit_literal
   13 prefix: • 'y'
   14       | • 'z'
   15       | • 'a'
   16       | • 'f'
   17       | • 'p'
   18       | • 'n'
   19       | • 'u'
   20       | • 'm'
   21       | • 'c'
   22       | • 'd'
   23       | • 'Y'
   24       | • 'Z'
   25       | • 'E'
   26       | • 'P'
   27       | • 'T'
   28       | • 'G'
   29       | • 'M'
   30       | • 'k'
   31       | • 'h'
   32 unit_literal: • 'm'
   33             | • 's'
   34             | • 'g'
   35             | • 'r' 'a' 'd'
   36             | • 'K'
   37             | • 'm' 'o' 'l'
   38             | • 'A'
   39             | • 'c' 'd'
   40             | • 'H' 'z'
   41             | • 's' 'r'
   42             | • 'N'
   43             | • 'P' 'a'
   44             | • 'J'
   45             | • 'W'
   46             | • 'C'
   47             | • 'V'
   48             | • 'F'
   49             | • 'R'
   50             | • 'S'
   51             | • 'W' 'b'
   52             | • 'T'
   53             | • 'H'
   54             | • 'I' 'm'
   55             | • 'I' 'x'
   56             | • 'B' 'q'
   57             | • 'G' 'y'
   58             | • 'S' 'v'
   59             | • 'k' 'a' 't'
   60             | • 'L'
   61             | • 'b' 'a' 'r'
   62             | • 'e' 'V'

    '('  shift, and go to state 3
    'y'  shift, and go to state 4
    'z'  shift, and go to state 5
    'a'  shift, and go to state 6
    'f'  shift, and go to state 7
    'p'  shift, and go to state 8
    'n'  shift, and go to state 9
    'u'  shift, and go to state 10
    'm'  shift, and go to state 11
    'c'  shift, and go to state 12
    'd'  shift, and go to state 13
    'Y'  shift, and go to state 14
    'Z'  shift, and go to state 15
    'E'  shift, and go to state 16
    'P'  shift, and go to state 17
    'T'  shift, and go to state 18
    'G'  shift, and go to state 19
    'M'  shift, and go to state 20
    'k'  shift, and go to state 21
    'h'  shift, and go to state 22
    's'  shift, and go to state 23
    'g'  shift, and go to state 24
    'r'  shift, and go to state 25
    'K'  shift, and go to state 26
    'A'  shift, and go to state 27
    'H'  shift, and go to state 28
    'N'  shift, and go to state 29
    'J'  shift, and go to state 30
    'W'  shift, and go to state 31
    'C'  shift, and go to state 32
    'V'  shift, and go to state 33
    'F'  shift, and go to state 34
    'R'  shift, and go to state 35
    'S'  shift, and go to state 36
    'b'  shift, and go to state 37
    'I'  shift, and go to state 38
    'B'  shift, and go to state 39
    'L'  shift, and go to state 40
    'e'  shift, and go to state 41

    $default  reduce using rule 4 (output)

    unit_group    go to state 47
    unit          go to state 44
    prefix        go to state 45
    unit_literal  go to state 46


State 3

    6 unit_group: • '(' unit_group ')'
    6           | '(' • unit_group ')'
    7           | • unit_group '^' exponent_group
    8           | • unit_group '/' unit_group
    9           | • unit_group MULTIPLY unit_group
   10           | • unit
   11 unit: • prefix unit_literal
   12     | • unit_literal
   13 prefix: • 'y'
   14       | • 'z'
   15       | • 'a'
   16       | • 'f'
   17       | • 'p'
   18       | • 'n'
   19       | • 'u'
   20       | • 'm'
   21       | • 'c'
   22       | • 'd'
   23       | • 'Y'
   24       | • 'Z'
   25       | • 'E'
   26       | • 'P'
   27       | • 'T'
   28       | • 'G'
   29       | • 'M'
   30       | • 'k'
   31       | • 'h'
   32 unit_literal: • 'm'
   33             | • 's'
   34             | • 'g'
   35             | • 'r' 'a' 'd'
   36             | • 'K'
   37             | • 'm' 'o' 'l'
   38             | • 'A'
   39             | • 'c' 'd'
   40             | • 'H' 'z'
   41             | • 's' 'r'
   42             | • 'N'
   43             | • 'P' 'a'
   44             | • 'J'
   45             | • 'W'
   46             | • 'C'
   47             | • 'V'
   48             | • 'F'
   49             | • 'R'
   50             | • 'S'
   51             | • 'W' 'b'
   52             | • 'T'
   53             | • 'H'
   54             | • 'I' 'm'
   55             | • 'I' 'x'
   56             | • 'B' 'q'
   57             | • 'G' 'y'
   58             | • 'S' 'v'
   59             | • 'k' 'a' 't'
   60             | • 'L'
   61             | • 'b' 'a' 'r'
   62             | • 'e' 'V'

    '('  shift, and go to state 3
    'y'  shift, and go to state 4
    'z'  shift, and go to state 5
    'a'  shift, and go to state 6
    'f'  shift, and go to state 7
    'p'  shift, and go to state 8
    'n'  shift, and go to state 9
    'u'  shift, and go to state 10
    'm'  shift, and go to state 11
    'c'  shift, and go to state 12
    'd'  shift, and go to state 13
    'Y'  shift, and go to state 14
    'Z'  shift, and go to state 15
    'E'  shift, and go to state 16
    'P'  shift, and go to state 17
    'T'  shift, and go to state 18
    'G'  shift, and go to state 19
    'M'  shift, and go to state 20
    'k'  shift, and go to state 21
    'h'  shift, and go to state 22
    's'  shift, and go to state 23
    'g'  shift, and go to state 24
    'r'  shift, and go to state 25
    'K'  shift, and go to state 26
    'A'  shift, and go to state 27
    'H'  shift, and go to state 28
    'N'  shift, and go to state 29
    'J'  shift, and go to state 30
    'W'  shift, and go to state 31
    'C'  shift, and go to state 32
    'V'  shift, and go to state 33
    'F'  shift, and go to state 34
    'R'  shift, and go to state 35
    'S'  shift, and go to state 36
    'b'  shift, and go to state 37
    'I'  shift, and go to state 38
    'B'  shift, and go to state 39
    'L'  shift, and go to state 40
    'e'  shift, and go to state 41

    unit_group    go to state 48
    unit          go to state 44
    prefix        go to state 45
    unit_literal  go to state 46


State 4

   13 prefix: 'y' •

    $default  reduce using rule 13 (prefix)


State 5

   14 prefix: 'z' •

    $default  reduce using rule 14 (prefix)


State 6

   15 prefix: 'a' •

    $default  reduce using rule 15 (prefix)


State 7

   16 prefix: 'f' •

    $default  reduce using rule 16 (prefix)


State 8

   17 prefix: 'p' •

    $default  reduce using rule 17 (prefix)


State 9

   18 prefix: 'n' •

    $default  reduce using rule 18 (prefix)


State 10

   19 prefix: 'u' •

    $default  reduce using rule 19 (prefix)


State 11

   20 prefix: 'm' •  ['m', 'c', 'P', 'T', 'G', 'k', 's', 'g', 'r', 'K', 'A', 'H', 'N', 'J', 'W', 'C', 'V', 'F', 'R', 'S', 'b', 'I', 'B', 'L', 'e']
   32 unit_literal: 'm' •  [$end, MULTIPLY, BAD_INPUT, '/', '^', ')']
   37             | 'm' • 'o' 'l'

    'o'  shift, and go to state 49

    $end       reduce using rule 32 (unit_literal)
    MULTIPLY   reduce using rule 32 (unit_literal)
    BAD_INPUT  reduce using rule 32 (unit_literal)
    '/'        reduce using rule 32 (unit_literal)
    '^'        reduce using rule 32 (unit_literal)
    ')'        reduce using rule 32 (unit_literal)
    $default   reduce using rule 20 (prefix)


State 12

   21 prefix: 'c' •  ['m', 'c', 'P', 'T', 'G', 'k', 's', 'g', 'r', 'K', 'A', 'H', 'N', 'J', 'W', 'C', 'V', 'F', 'R', 'S', 'b', 'I', 'B', 'L', 'e']
   39 unit_literal: 'c' • 'd'

    'd'  shift, and go to state 50

    $default  reduce using rule 21 (prefix)


State 13

   22 prefix: 'd' •

    $default  reduce using rule 22 (prefix)


State 14

   23 prefix: 'Y' •

    $default  reduce using rule 23 (prefix)


State 15

   24 prefix: 'Z' •

    $default  reduce using rule 24 (prefix)


State 16

   25 prefix: 'E' •

    $default  reduce using rule 25 (prefix)


State 17

   26 prefix: 'P' •  ['m', 'c', 'P', 'T', 'G', 'k', 's', 'g', 'r', 'K', 'A', 'H', 'N', 'J', 'W', 'C', 'V', 'F', 'R', 'S', 'b', 'I', 'B', 'L', 'e']
   43 unit_literal: 'P' • 'a'

    'a'  shift, and go to state 51

    $default  reduce using rule 26 (prefix)


State 18

   27 prefix: 'T' •  ['m', 'c', 'P', 'T', 'G', 'k', 's', 'g', 'r', 'K', 'A', 'H', 'N', 'J', 'W', 'C', 'V', 'F', 'R', 'S', 'b', 'I', 'B', 'L', 'e']
   52 unit_literal: 'T' •  [$end, MULTIPLY, BAD_INPUT, '/', '^', ')']

    $end       reduce using rule 52 (unit_literal)
    MULTIPLY   reduce using rule 52 (unit_literal)
    BAD_INPUT  reduce using rule 52 (unit_literal)
    '/'        reduce using rule 52 (unit_literal)
    '^'        reduce using rule 52 (unit_literal)
    ')'        reduce using rule 52 (unit_literal)
    $default   reduce using rule 27 (prefix)


State 19

   28 prefix: 'G' •  ['m', 'c', 'P', 'T', 'G', 'k', 's', 'g', 'r', 'K', 'A', 'H', 'N', 'J', 'W', 'C', 'V', 'F', 'R', 'S', 'b', 'I', 'B', 'L', 'e']
   57 unit_literal: 'G' • 'y'

    'y'  shift, and go to state 52

    $default  reduce using rule 28 (prefix)


State 20

   29 prefix: 'M' •

    $default  reduce using rule 29 (prefix)


State 21

   30 prefix: 'k' •  ['m', 'c', 'P', 'T', 'G', 'k', 's', 'g', 'r', 'K', 'A', 'H', 'N', 'J', 'W', 'C', 'V', 'F', 'R', 'S', 'b', 'I', 'B', 'L', 'e']
   59 unit_literal: 'k' • 'a' 't'

    'a'  shift, and go to state 53

    $default  reduce using rule 30 (prefix)


State 22

   31 prefix: 'h' •

    $default  reduce using rule 31 (prefix)


State 23

   33 unit_literal: 's' •  [$end, MULTIPLY, BAD_INPUT, '/', '^', ')']
   41             | 's' • 'r'

    'r'  shift, and go to state 54

    $default  reduce using rule 33 (unit_literal)


State 24

   34 unit_literal: 'g' •

    $default  reduce using rule 34 (unit_literal)


State 25

   35 unit_literal: 'r' • 'a' 'd'

    'a'  shift, and go to state 55


State 26

   36 unit_literal: 'K' •

    $default  reduce using rule 36 (unit_literal)


State 27

   38 unit_literal: 'A' •

    $default  reduce using rule 38 (unit_literal)


State 28

   40 unit_literal: 'H' • 'z'
   53             | 'H' •  [$end, MULTIPLY, BAD_INPUT, '/', '^', ')']

    'z'  shift, and go to state 56

    $default  reduce using rule 53 (unit_literal)


State 29

   42 unit_literal: 'N' •

    $default  reduce using rule 42 (unit_literal)


State 30

   44 unit_literal: 'J' •

    $default  reduce using rule 44 (unit_literal)


State 31

   45 unit_literal: 'W' •  [$end, MULTIPLY, BAD_INPUT, '/', '^', ')']
   51             | 'W' • 'b'

    'b'  shift, and go to state 57

    $default  reduce using rule 45 (unit_literal)


State 32

   46 unit_literal: 'C' •

    $default  reduce using rule 46 (unit_literal)


State 33

   47 unit_literal: 'V' •

    $default  reduce using rule 47 (unit_literal)


State 34

   48 unit_literal: 'F' •

    $default  reduce using rule 48 (unit_literal)


State 35

   49 unit_literal: 'R' •

    $default  reduce using rule 49 (unit_literal)


State 36

   50 unit_literal: 'S' •  [$end, MULTIPLY, BAD_INPUT, '/', '^', ')']
   58             | 'S' • 'v'

    'v'  shift, and go to state 58

    $default  reduce using rule 50 (unit_literal)


State 37

   61 unit_literal: 'b' • 'a' 'r'

    'a'  shift, and go to state 59


State 38

   54 unit_literal: 'I' • 'm'
   55             | 'I' • 'x'

    'm'  shift, and go to state 60
    'x'  shift, and go to state 61


State 39

   56 unit_literal: 'B' • 'q'

    'q'  shift, and go to state 62


State 40

   60 unit_literal: 'L' •

    $default  reduce using rule 60 (unit_literal)


State 41

   62 unit_literal: 'e' • 'V'

    'V'  shift, and go to state 63


State 42

    0 $accept: output • $end

    $end  shift, and go to state 64


State 43

    1 output: unit_group •  [$end]
    2       | unit_group • BAD_INPUT
    7 unit_group: unit_group • '^' exponent_group
    8           | unit_group • '/' unit_group
    9           | unit_group • MULTIPLY unit_group

    MULTIPLY   shift, and go to state 65
    BAD_INPUT  shift, and go to state 66
    '/'        shift, and go to state 67
    '^'        shift, and go to state 68

    $default  reduce using rule 1 (output)


State 44

   10 unit_group: unit •

    $default  reduce using rule 10 (unit_group)


State 45

   11 unit: prefix • unit_literal
   32 unit_literal: • 'm'
   33             | • 's'
   34             | • 'g'
   35             | • 'r' 'a' 'd'
   36             | • 'K'
   37             | • 'm' 'o' 'l'
   38             | • 'A'
   39             | • 'c' 'd'
   40             | • 'H' 'z'
   41             | • 's' 'r'
   42             | • 'N'
   43             | • 'P' 'a'
   44             | • 'J'
   45             | • 'W'
   46             | • 'C'
   47             | • 'V'
   48             | • 'F'
   49             | • 'R'
   50             | • 'S'
   51             | • 'W' 'b'
   52             | • 'T'
   53             | • 'H'
   54             | • 'I' 'm'
   55             | • 'I' 'x'
   56             | • 'B' 'q'
   57             | • 'G' 'y'
   58             | • 'S' 'v'
   59             | • 'k' 'a' 't'
   60             | • 'L'
   61             | • 'b' 'a' 'r'
   62             | • 'e' 'V'

    'm'  shift, and go to state 69
    'c'  shift, and go to state 70
    'P'  shift, and go to state 71
    'T'  shift, and go to state 72
    'G'  shift, and go to state 73
    'k'  shift, and go to state 74
    's'  shift, and go to state 23
    'g'  shift, and go to state 24
    'r'  shift, and go to state 25
    'K'  shift, and go to state 26
    'A'  shift, and go to state 27
    'H'  shift, and go to state 28
    'N'  shift, and go to state 29
    'J'  shift, and go to state 30
    'W'  shift, and go to state 31
    'C'  shift, and go to state 32
    'V'  shift, and go to state 33
    'F'  shift, and go to state 34
    'R'  shift, and go to state 35
    'S'  shift, and go to state 36
    'b'  shift, and go to state 37
    'I'  shift, and go to state 38
    'B'  shift, and go to state 39
    'L'  shift, and go to state 40
    'e'  shift, and go to state 41

    unit_literal  go to state 75


State 46

   12 unit: unit_literal •

    $default  reduce using rule 12 (unit)


State 47

    3 output: BAD_INPUT unit_group •  [$end]
    7 unit_group: unit_group • '^' exponent_group
    8           | unit_group • '/' unit_group
    9           | unit_group • MULTIPLY unit_group

    MULTIPLY  shift, and go to state 65
    '/'       shift, and go to state 67
    '^'       shift, and go to state 68

    $default  reduce using rule 3 (output)


State 48

    6 unit_group: '(' unit_group • ')'
    7           | unit_group • '^' exponent_group
    8           | unit_group • '/' unit_group
    9           | unit_group • MULTIPLY unit_group

    MULTIPLY  shift, and go to state 65
    '/'       shift, and go to state 67
    '^'       shift, and go to state 68
    ')'       shift, and go to state 76


State 49

   37 unit_literal: 'm' 'o' • 'l'

    'l'  shift, and go to state 77


State 50

   39 unit_literal: 'c' 'd' •

    $default  reduce using rule 39 (unit_literal)


State 51

   43 unit_literal: 'P' 'a' •

    $default  reduce using rule 43 (unit_literal)


State 52

   57 unit_literal: 'G' 'y' •

    $default  reduce using rule 57 (unit_literal)


State 53

   59 unit_literal: 'k' 'a' • 't'

    't'  shift, and go to state 78


State 54

   41 unit_literal: 's' 'r' •

    $default  reduce using rule 41 (unit_literal)


State 55

   35 unit_literal: 'r' 'a' • 'd'

    'd'  shift, and go to state 79


State 56

   40 unit_literal: 'H' 'z' •

    $default  reduce using rule 40 (unit_literal)


State 57

   51 unit_literal: 'W' 'b' •

    $default  reduce using rule 51 (unit_literal)


State 58

   58 unit_literal: 'S' 'v' •

    $default  reduce using rule 58 (unit_literal)


State 59

   61 unit_literal: 'b' 'a' • 'r'

    'r'  shift, and go to state 80


State 60

   54 unit_literal: 'I' 'm' •

    $default  reduce using rule 54 (unit_literal)


State 61

   55 unit_literal: 'I' 'x' •

    $default  reduce using rule 55 (unit_literal)


State 62

   56 unit_literal: 'B' 'q' •

    $default  reduce using rule 56 (unit_literal)


State 63

   62 unit_literal: 'e' 'V' •

    $default  reduce using rule 62 (unit_literal)


State 64

    0 $accept: output $end •

    $default  accept


State 65

    6 unit_group: • '(' unit_group ')'
    7           | • unit_group '^' exponent_group
    8           | • unit_group '/' unit_group
    9           | • unit_group MULTIPLY unit_group
    9           | unit_group MULTIPLY • unit_group
   10           | • unit
   11 unit: • prefix unit_literal
   12     | • unit_literal
   13 prefix: • 'y'
   14       | • 'z'
   15       | • 'a'
   16       | • 'f'
   17       | • 'p'
   18       | • 'n'
   19       | • 'u'
   20       | • 'm'
   21       | • 'c'
   22       | • 'd'
   23       | • 'Y'
   24       | • 'Z'
   25       | • 'E'
   26       | • 'P'
   27       | • 'T'
   28       | • 'G'
   29       | • 'M'
   30       | • 'k'
   31       | • 'h'
   32 unit_literal: • 'm'
   33             | • 's'
   34             | • 'g'
   35             | • 'r' 'a' 'd'
   36             | • 'K'
   37             | • 'm' 'o' 'l'
   38             | • 'A'
   39             | • 'c' 'd'
   40             | • 'H' 'z'
   41             | • 's' 'r'
   42             | • 'N'
   43             | • 'P' 'a'
   44             | • 'J'
   45             | • 'W'
   46             | • 'C'
   47             | • 'V'
   48             | • 'F'
   49             | • 'R'
   50             | • 'S'
   51             | • 'W' 'b'
   52             | • 'T'
   53             | • 'H'
   54             | • 'I' 'm'
   55             | • 'I' 'x'
   56             | • 'B' 'q'
   57             | • 'G' 'y'
   58             | • 'S' 'v'
   59             | • 'k' 'a' 't'
   60             | • 'L'
   61             | • 'b' 'a' 'r'
   62             | • 'e' 'V'

    '('  shift, and go to state 3
    'y'  shift, and go to state 4
    'z'  shift, and go to state 5
    'a'  shift, and go to state 6
    'f'  shift, and go to state 7
    'p'  shift, and go to state 8
    'n'  shift, and go to state 9
    'u'  shift, and go to state 10
    'm'  shift, and go to state 11
    'c'  shift, and go to state 12
    'd'  shift, and go to state 13
    'Y'  shift, and go to state 14
    'Z'  shift, and go to state 15
    'E'  shift, and go to state 16
    'P'  shift, and go to state 17
    'T'  shift, and go to state 18
    'G'  shift, and go to state 19
    'M'  shift, and go to state 20
    'k'  shift, and go to state 21
    'h'  shift, and go to state 22
    's'  shift, and go to state 23
    'g'  shift, and go to state 24
    'r'  shift, and go to state 25
    'K'  shift, and go to state 26
    'A'  shift, and go to state 27
    'H'  shift, and go to state 28
    'N'  shift, and go to state 29
    'J'  shift, and go to state 30
    'W'  shift, and go to state 31
    'C'  shift, and go to state 32
    'V'  shift, and go to state 33
    'F'  shift, and go to state 34
    'R'  shift, and go to state 35
    'S'  shift, and go to state 36
    'b'  shift, and go to state 37
    'I'  shift, and go to state 38
    'B'  shift, and go to state 39
    'L'  shift, and go to state 40
    'e'  shift, and go to state 41

    unit_group    go to state 81
    unit          go to state 44
    prefix        go to state 45
    unit_literal  go to state 46


State 66

    2 output: unit_group BAD_INPUT •

    $default  reduce using rule 2 (output)


State 67

    6 unit_group: • '(' unit_group ')'
    7           | • unit_group '^' exponent_group
    8           | • unit_group '/' unit_group
    8           | unit_group '/' • unit_group
    9           | • unit_group MULTIPLY unit_group
   10           | • unit
   11 unit: • prefix unit_literal
   12     | • unit_literal
   13 prefix: • 'y'
   14       | • 'z'
   15       | • 'a'
   16       | • 'f'
   17       | • 'p'
   18       | • 'n'
   19       | • 'u'
   20       | • 'm'
   21       | • 'c'
   22       | • 'd'
   23       | • 'Y'
   24       | • 'Z'
   25       | • 'E'
   26       | • 'P'
   27       | • 'T'
   28       | • 'G'
   29       | • 'M'
   30       | • 'k'
   31       | • 'h'
   32 unit_literal: • 'm'
   33             | • 's'
   34             | • 'g'
   35             | • 'r' 'a' 'd'
   36             | • 'K'
   37             | • 'm' 'o' 'l'
   38             | • 'A'
   39             | • 'c' 'd'
   40             | • 'H' 'z'
   41             | • 's' 'r'
   42             | • 'N'
   43             | • 'P' 'a'
   44             | • 'J'
   45             | • 'W'
   46             | • 'C'
   47             | • 'V'
   48             | • 'F'
   49             | • 'R'
   50             | • 'S'
   51             | • 'W' 'b'
   52             | • 'T'
   53             | • 'H'
   54             | • 'I' 'm'
   55             | • 'I' 'x'
   56             | • 'B' 'q'
   57             | • 'G' 'y'
   58             | • 'S' 'v'
   59             | • 'k' 'a' 't'
   60             | • 'L'
   61             | • 'b' 'a' 'r'
   62             | • 'e' 'V'

    '('  shift, and go to state 3
    'y'  shift, and go to state 4
    'z'  shift, and go to state 5
    'a'  shift, and go to state 6
    'f'  shift, and go to state 7
    'p'  shift, and go to state 8
    'n'  shift, and go to state 9
    'u'  shift, and go to state 10
    'm'  shift, and go to state 11
    'c'  shift, and go to state 12
    'd'  shift, and go to state 13
    'Y'  shift, and go to state 14
    'Z'  shift, and go to state 15
    'E'  shift, and go to state 16
    'P'  shift, and go to state 17
    'T'  shift, and go to state 18
    'G'  shift, and go to state 19
    'M'  shift, and go to state 20
    'k'  shift, and go to state 21
    'h'  shift, and go to state 22
    's'  shift, and go to state 23
    'g'  shift, and go to state 24
    'r'  shift, and go to state 25
    'K'  shift, and go to state 26
    'A'  shift, and go to state 27
    'H'  shift, and go to state 28
    'N'  shift, and go to state 29
    'J'  shift, and go to state 30
    'W'  shift, and go to state 31
    'C'  shift, and go to state 32
    'V'  shift, and go to state 33
    'F'  shift, and go to state 34
    'R'  shift, and go to state 35
    'S'  shift, and go to state 36
    'b'  shift, and go to state 37
    'I'  shift, and go to state 38
    'B'  shift, and go to state 39
    'L'  shift, and go to state 40
    'e'  shift, and go to state 41

    unit_group    go to state 82
    unit          go to state 44
    prefix        go to state 45
    unit_literal  go to state 46


State 68

    7 unit_group: unit_group '^' • exponent_group
   63 exponent_group: • '(' exponent_group ')'
   64               | • INTEGER

    INTEGER  shift, and go to state 83
    '('      shift, and go to state 84

    exponent_group  go to state 85


State 69

   32 unit_literal: 'm' •  [$end, MULTIPLY, BAD_INPUT, '/', '^', ')']
   37             | 'm' • 'o' 'l'

    'o'  shift, and go to state 49

    $default  reduce using rule 32 (unit_literal)


State 70

   39 unit_literal: 'c' • 'd'

    'd'  shift, and go to state 50


State 71

   43 unit_literal: 'P' • 'a'

    'a'  shift, and go to state 51


State 72

   52 unit_literal: 'T' •

    $default  reduce using rule 52 (unit_literal)


State 73

   57 unit_literal: 'G' • 'y'

    'y'  shift, and go to state 52


State 74

   59 unit_literal: 'k' • 'a' 't'

    'a'  shift, and go to state 53


State 75

   11 unit: prefix unit_literal •

    $default  reduce using rule 11 (unit)


State 76

    6 unit_group: '(' unit_group ')' •

    $default  reduce using rule 6 (unit_group)


State 77

   37 unit_literal: 'm' 'o' 'l' •

    $default  reduce using rule 37 (unit_literal)


State 78

   59 unit_literal: 'k' 'a' 't' •

    $default  reduce using rule 59 (unit_literal)


State 79

   35 unit_literal: 'r' 'a' 'd' •

    $default  reduce using rule 35 (unit_literal)


State 80

   61 unit_literal: 'b' 'a' 'r' •

    $default  reduce using rule 61 (unit_literal)


State 81

    7 unit_group: unit_group • '^' exponent_group
    8           | unit_group • '/' unit_group
    9           | unit_group • MULTIPLY unit_group
    9           | unit_group MULTIPLY unit_group •  [$end, MULTIPLY, BAD_INPUT, '/', ')']

    '^'  shift, and go to state 68

    $default  reduce using rule 9 (unit_group)

    Conflict between rule 9 and token MULTIPLY resolved as reduce (%left MULTIPLY).
    Conflict between rule 9 and token '/' resolved as reduce (%left '/').
    Conflict between rule 9 and token '^' resolved as shift (MULTIPLY < '^').


State 82

    7 unit_group: unit_group • '^' exponent_group
    8           | unit_group • '/' unit_group
    8           | unit_group '/' unit_group •  [$end, MULTIPLY, BAD_INPUT, '/', ')']
    9           | unit_group • MULTIPLY unit_group

    '^'  shift, and go to state 68

    $default  reduce using rule 8 (unit_group)

    Conflict between rule 8 and token MULTIPLY resolved as reduce (%left MULTIPLY).
    Conflict between rule 8 and token '/' resolved as reduce (%left '/').
    Conflict between rule 8 and token '^' resolved as shift ('/' < '^').


State 83

   64 exponent_group: INTEGER •

    $default  reduce using rule 64 (exponent_group)


State 84

   63 exponent_group: • '(' exponent_group ')'
   63               | '(' • exponent_group ')'
   64               | • INTEGER

    INTEGER  shift, and go to state 83
    '('      shift, and go to state 84

    exponent_group  go to state 86


State 85

    7 unit_group: unit_group '^' exponent_group •

    $default  reduce using rule 7 (unit_group)


State 86

   63 exponent_group: '(' exponent_group • ')'

    ')'  shift, and go to state 87


State 87

   63 exponent_group: '(' exponent_group ')' •

    $default  reduce using rule 63 (exponent_group)
